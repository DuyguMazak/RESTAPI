name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Increment version
        id: increment_version
        run: |
          LAST_TAG=$(git describe --abbrev=0 --tags | sed 's/v//g' || echo "0.0.0")
          MAJOR=$(echo "$LAST_TAG" | awk -F'[.-]' '{print $1}')
          MINOR=$(echo "$LAST_TAG" | awk -F'[.-]' '{print $2}')
          PATCH=$(echo "$LAST_TAG" | awk -F'[.-]' '{print $3}')
          VERSION="$MAJOR.$MINOR.$((PATCH+1))"
          echo "::set-output name=version::$VERSION"
          echo "Last tag: $LAST_TAG"
          echo "incremented version: $VERSION"
      - name: Login to GitHub Packages
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN}}
      - name: Build and push Docker image
        run: |
          docker build -t docker.pkg.github.com/duygumazak/restapi/myimage:${{ steps.increment_version.outputs.version }} .
          docker push docker.pkg.github.com/duygumazak/restapi/myimage:${{ steps.increment_version.outputs.version }}
      - name: Create Release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ steps.increment_version.outputs.version }}
          release_name: Release ${{ steps.increment_version.outputs.version }}
          draft: false
                 
          prerelease: false